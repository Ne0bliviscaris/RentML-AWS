name: Deploy Model API to SageMaker

on:
  push:
    branches: [ main ]
    paths:
      - 'sagemaker/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  SAGEMAKER_MODEL_NAME: rentml-car-detection
  S3_BUCKET: rentml-model

jobs:
  deploy-sagemaker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create S3 bucket if does not exist
      run: |
        aws s3 mb s3://rentml-model 2>/dev/null || echo "Bucket exists"

    - name: Package and upload model to S3
      run: |
        cd sagemaker
        tar -czf model.tar.gz *
        aws s3 cp model.tar.gz s3://rentml-model/model.tar.gz

    - name: Register model in SageMaker
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        if ! aws sagemaker describe-model --model-name ${{ env.SAGEMAKER_MODEL_NAME }} 2>/dev/null; then
          aws sagemaker create-model \
            --model-name ${{ env.SAGEMAKER_MODEL_NAME }} \
            --primary-container Image=763104351884.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/pytorch-inference:1.13.1-cpu-py39-ubuntu20.04-sagemaker,ModelDataUrl=s3://rentml-model/model.tar.gz \
            --execution-role-arn arn:aws:iam::$ACCOUNT_ID:role/LabRole
        fi

    - name: Create SageMaker endpoint config
      run: |
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        CONFIG_NAME="${{ env.SAGEMAKER_MODEL_NAME }}-config-${TIMESTAMP}"
        echo "CONFIG_NAME=$CONFIG_NAME" >> $GITHUB_ENV
        aws sagemaker create-endpoint-config \
          --endpoint-config-name $CONFIG_NAME \
          --production-variants VariantName=primary,ModelName=${{ env.SAGEMAKER_MODEL_NAME }},InitialInstanceCount=1,InstanceType=ml.m5.large,InitialVariantWeight=1

    - name: Create or update SageMaker endpoint
      run: |
        if ! aws sagemaker describe-endpoint --endpoint-name ${{ env.SAGEMAKER_MODEL_NAME }} 2>/dev/null; then
          aws sagemaker create-endpoint \
            --endpoint-name ${{ env.SAGEMAKER_MODEL_NAME }} \
            --endpoint-config-name $CONFIG_NAME
        else
          aws sagemaker update-endpoint \
            --endpoint-name ${{ env.SAGEMAKER_MODEL_NAME }} \
            --endpoint-config-name $CONFIG_NAME
        fi